@model Cfm.Web.Mvc.Areas.CFMCounter.Models.ViewModel.AccountingEntryViewModel
@using Cfm.Web.Mvc.Common;
@{ 
    int RefType = (int)ViewBag.refType;
    Model.RefType = RefType;
}

<script src="~/Scripts/CFM/Common.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<div class="panel panel-primary">
    <div class="panel-heading">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="fontbold color-white">
            <span>@("Thêm mới bút toán")</span>
        </h4>
    </div>
    <div class="panel-body pb0">
        @using (Ajax.BeginForm("BorrowFundUpdate", "AccountingEntry", new { Area = "CFMCounter" }, new AjaxOptions { HttpMethod = Constant.Method.POST.ToString(), OnSuccess = "Entry_Process.CreateEntrySuccess(data,'" + RefType + "')" }, new { @id = "fCreateBorrowEntry" }))
        {
            @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()
           
            string STTLabel = "";
            string DateTransLabel = "";
            if (Model.RefType == (int)Constant.AccountingRefType.BorrowOtherFunds)
            {
                STTLabel = "Lần vay";
                DateTransLabel = "Ngày vay";
            }
            else if (Model.RefType == (int)Constant.AccountingRefType.PayOtherFunds)
            {
                STTLabel = "Lần trả";
                DateTransLabel = "Ngày trả";
            }
            else if (Model.RefType == (int)Constant.AccountingRefType.OtherFundsBorrow)
            {
                STTLabel = "Lần vay";
                DateTransLabel = "Ngày vay";
            }
            else if (Model.RefType == (int)Constant.AccountingRefType.OtherFundsPay)
            {
                STTLabel = "Lần trả";
                DateTransLabel = "Ngày trả";
            }
            else if (Model.RefType == (int)Constant.AccountingRefType.FundsReceive)
            {
                STTLabel = "Lần nhận quỹ";
                DateTransLabel = "Ngày nhận quỹ";
            }
            else if (Model.RefType == (int)Constant.AccountingRefType.FundsSend)
            {
                STTLabel = "Lần tiếp nộp quỹ";
                DateTransLabel = "Ngày tiếp nộp quỹ";
            }
            else if (Model.RefType == (int)Constant.AccountingRefType.ReceiveTGNH)
            {
                STTLabel = "Lần nhận TGNH";
                DateTransLabel = "Ngày nhận TGNH";
            }
            else if (Model.RefType == (int)Constant.AccountingRefType.SendTGNH)
            {
                STTLabel = "Lần nộp TGNH";
                DateTransLabel = "Ngày nộp TGNH";
            }
            else
            {
                STTLabel = "STT";
                DateTransLabel = "Ngày nhận";
            }
            
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="TransDate">@DateTransLabel</label>
                        @Html.TextBoxFor(x => x.TransDate, new { @class = "form-control", @placeholder = "Ngày vay tiền", @readonly="readonly" })
                        @Html.ValidationMessageFor(x => x.TransDate)
                        @Html.HiddenFor(x => x.Id)
                        @Html.HiddenFor(x => x.RefType)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="OrdinalNumberString" id="STTLabel">@STTLabel</label>
                        @Html.TextBoxFor(x => x.OrdinalNumberString, new { @class = "form-control", @placeholder = "Lần vay" })
                        @Html.ValidationMessageFor(x => x.OrdinalNumberString)
                    </div>
                </div>
            </div>

            @*<div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="BudgetTypeId">Loại quỹ</label>
                        @Html.DropDownListFor(x => x.BudgetTypeId, (IEnumerable<SelectListItem>)ViewBag.ListBudgetType, new { @class = "form-control", @placeholder = "Loại quỹ" })
                        @Html.ValidationMessageFor(x => x.BudgetTypeId)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="CashFllowId">Dòng tiền</label>
                        @Html.DropDownListFor(x => x.CashFllowId, (IEnumerable<SelectListItem>)ViewBag.ListCashFlow, new { @class = "form-control", @placeholder = "Dòng tiền" })
                        @Html.ValidationMessageFor(x => x.CashFllowId)
                    </div>
                </div>
            </div>*@
            @*<div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="Amount">Số tiền vay</label>
                        @Html.TextBoxFor(x => x.Amount, new { @class = "form-control NumberMask ",@id = "cfm_txt_amount", @placeholder = "Số tiền vay", @autocomplete = "off" })
                       
                        @Html.ValidationMessageFor(x => x.AmountVnd)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="CurrencyType">Đơn vị</label>
                        @Html.DropDownListFor(x => x.CurrencyType, (IEnumerable<SelectListItem>)ViewBag.ListCurrencyType, new { @class = "form-control", @placeholder = "Đơn vị" })
                        @Html.ValidationMessageFor(x => x.CurrencyType)
                    </div>
                </div>
            </div>*@

            <div class="row">
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Amount">Tiền TCBC tập trung</label>
                                @Html.TextBoxFor(x => x.Amount, new { @class = "form-control NumberMask", @readonly = "readonly" })
                                @Html.ValidationMessageFor(x => x.Amount)
                            </div>
                        </div>
                        <div class="col-md-6 pl0">
                            <div class="form-group">
                                @Html.DropDownListFor(x => x.CurrencyType, (IEnumerable<SelectListItem>)ViewBag.ListCurrencyType, new { @class = "form-control mt18", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Amount">Tiền TCBC tại đơn vị</label>
                                @Html.TextBoxFor(x => x.AmountUnitString, new { @class = "form-control NumberMask", @readonly = "readonly" })
                                @Html.ValidationMessageFor(x => x.AmountUnitString)
                            </div>
                        </div>
                        <div class="col-md-6 pl0">
                            <div class="form-group">
                                @Html.DropDownListFor(x => x.CurrencyTypeUnit, (IEnumerable<SelectListItem>)ViewBag.ListCurrencyType, new { @class = "form-control mt18", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="Amount">Tiền TKBĐ</label>
                                @Html.TextBoxFor(x => x.AmountSavingString, new { @class = "form-control NumberMask" })
                                @Html.ValidationMessageFor(x => x.AmountSavingString)
                            </div>
                        </div>
                        <div class="col-md-6 pl0">
                            <div class="form-group">
                                @Html.DropDownListFor(x => x.CurrencyTypeSaving, (IEnumerable<SelectListItem>)ViewBag.ListCurrencyType, new { @class = "form-control mt18" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="AmountBSString">Tiền kinh doanh dịch vụ</label>
                                @Html.TextBoxFor(x => x.AmountBSString, new { @class = "form-control NumberMask", @readonly = "readonly" })
                                @Html.ValidationMessageFor(x => x.AmountBSString)
                            </div>
                        </div>
                        <div class="col-md-6 pl0">
                            <div class="form-group">
                                @Html.DropDownListFor(x => x.CurrencyTypeBS, (IEnumerable<SelectListItem>)ViewBag.ListCurrencyType, new { @class = "form-control mt18", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            @*<div class="form-group">
                <label for="AmountInWord">Bằng chữ</label>
                @Html.TextAreaFor(x => x.AmountInWord, new { @class = "form-control",@id ="txt_Amount_In_Word" })
                @Html.ValidationMessageFor(x => x.AmountInWord)
            </div>*@
            <div class="form-group">
                <label for="Description">Ghi chú</label>
                @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @placeholder = "Ghi chú" })
                @Html.ValidationMessageFor(x => x.Description)
            </div>
           
            <div class="modal-footer">
                <div class="row">
                    <div class="col-sm-12 text-right">
                        <button type="button" onclick="common.Submitform('fCreateBorrowEntry', true)" class="btn btn-pns text-right  btn-sm"><i class="glyphicon glyphicon-ok"></i> Cập nhật</button>
                        <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i> Thoát</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    common.Init();
    $(document).ready(function () {
     
        $("#cfm_txt_amount").keyup(function () {
            var oValue = parseFloat($(this).val().replace(/\,/g, ''));
            var amountInWord = common.SayMoney(oValue)
            $("#txt_Amount_In_Word").val(amountInWord);

        });
    });
    $('#TransDate').datepicker({
        format: 'dd/mm/yyyy', language: "vi", autoclose: true, endDate: new Date('@DateTime.Now.Year', '@(DateTime.Now.Month - 1)', '@DateTime.Now.Day', 0, 0, 0, 0)
    });
</script>